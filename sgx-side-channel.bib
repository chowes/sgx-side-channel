
@book{workshop_on_end-to-end_proceedings_2005,
	address = {Berkeley, CA},
	title = {Proceedings of the {Workshop} on {End}-to-{End}, {Sense}-and-{Respond} {Systems}, {Applications}, and {Services}: ({EESR} '05), {June} 5, 2005, {Seattle}, {WA}, {USA}},
	isbn = {978-1-931971-32-4},
	shorttitle = {Proceedings of the {Workshop} on {End}-to-{End}, {Sense}-and-{Respond} {Systems}, {Applications}, and {Services}},
	url = {http://portal.acm.org/toc.cfm?id=1072530},
	language = {English},
	urldate = {2017-05-30},
	publisher = {USENIX Association},
	author = {Workshop on End-to-End, Applications, {and} Services, Sense-and-Respond Systems and {USENIX Association} and {ACM SIGMOBILE} and {ACM Digital Library}},
	year = {2005},
	note = {OCLC: 83294375},
	file = {sec16_paper_costan.pdf:/home/colin/.zotero/zotero/f4prs9xk.default/zotero/storage/TTZNBP5Z/sec16_paper_costan.pdf:application/pdf}
}

@inproceedings{raiciu_improving_2011,
	title = {Improving datacenter performance and robustness with multipath {TCP}},
	volume = {41},
	url = {http://dl.acm.org/citation.cfm?id=2018467},
	urldate = {2017-06-13},
	booktitle = {{ACM} {SIGCOMM} {Computer} {Communication} {Review}},
	publisher = {ACM},
	author = {Raiciu, Costin and Barre, Sebastien and Pluntke, Christopher and Greenhalgh, Adam and Wischik, Damon and Handley, Mark},
	year = {2011},
	pages = {266--277},
	file = {mptcp-sigcomm11.pdf:/home/colin/.zotero/zotero/f4prs9xk.default/zotero/storage/5QZZTBR7/mptcp-sigcomm11.pdf:application/pdf}
}

@misc{bonaventure_learning_nodate,
	title = {Learning {Networking} by {Reproducing} {Research} {Results} â€“ {Computer} {Communication} {Review}},
	url = {https://ccronline.sigcomm.org/2017/learning-networking-by-reproducing-research-results/},
	urldate = {2017-06-01},
	author = {Bonaventure, Olivier},
	file = {Snapshot:/home/colin/.zotero/zotero/f4prs9xk.default/zotero/storage/DGTNQIMT/learning-networking-by-reproducing-research-results.html:text/html}
}

@article{benamar_routing_2014,
	series = {Opportunistic networks},
	title = {Routing protocols in {Vehicular} {Delay} {Tolerant} {Networks}: {A} comprehensive survey},
	volume = {48},
	issn = {0140-3664},
	shorttitle = {Routing protocols in {Vehicular} {Delay} {Tolerant} {Networks}},
	url = {http://www.sciencedirect.com/science/article/pii/S0140366414001212},
	doi = {10.1016/j.comcom.2014.03.024},
	abstract = {This article presents a comprehensive survey of routing protocols proposed for routing in Vehicular Delay Tolerant Networks (VDTN) in vehicular environment. DTNs are utilized in various operational environments, including those subject to disruption and disconnection and those with high-delay, such as Vehicular Ad-Hoc Networks (VANET). We focus on a special type of VANET, where the vehicular traffic is sparse and direct end-to-end paths between communicating parties do not always exist. Thus, communication in this context falls into the category of Vehicular Delay Tolerant Network (VDTN). Due to the limited transmission range of an RSU (Road Side Unit), remote vehicles, in VDTN, may not connect to the RSU directly and thus have to rely on intermediate vehicles to relay the packets. During the message relay process, complete end-to-end paths may not exist in highly partitioned VANETs. Therefore, the intermediate vehicles must buffer and forward messages opportunistically. Through buffer, carry and forward, the message can eventually be delivered to the destination even if an end-to-end connection never exists between source and destination. The main objective of routing protocols in DTN is to maximize the probability of delivery to the destination while minimizing the end-to-end delay. Also, vehicular traffic models are important for DTN routing in vehicle networks because the performance of DTN routing protocols is closely related to population and mobility models of the network.},
	journal = {Computer Communications},
	author = {Benamar, Nabil and Singh, Kamal D. and Benamar, Maria and El Ouadghiri, Driss and Bonnin, Jean-Marie},
	month = jul,
	year = {2014},
	keywords = {DTNs, ITS, Vanets, VDTNs},
	pages = {141--158},
	file = {ScienceDirect Snapshot:/home/colin/.zotero/zotero/f4prs9xk.default/zotero/storage/669KPFK8/S0140366414001212.html:text/html}
}

@misc{center_for_history_and_new_media_zotero_nodate,
	title = {Zotero {Quick} {Start} {Guide}},
	url = {http://zotero.org/support/quick_start_guide},
	author = {{Center for History and New Media}}
}

@misc{miessler_seclists_2017,
	title = {{SecLists}},
	url = {https://github.com/danielmiessler/SecLists},
	author = {Miessler, Daniel},
	month = jun,
	year = {2017},
	note = {original-date: 2012-02-19T01:30:18Z},
	file = {Snapshot:/home/colin/.zotero/zotero/f4prs9xk.default/zotero/storage/S92WCVS8/10_million_password_list_top_10000.html:text/html}
}

@inproceedings{seo_sgx-shield:_2017,
	title = {{SGX}-{Shield}: {Enabling} address space layout randomization for {SGX} programs},
	shorttitle = {{SGX}-{Shield}},
	url = {http://cps.kaist.ac.kr/papers/ndss17-sgxshield.pdf},
	urldate = {2017-06-02},
	booktitle = {Proceedings of the 2017 {Annual} {Network} and {Distributed} {System} {Security} {Symposium} ({NDSS}), {San} {Diego}, {CA}},
	author = {Seo, Jaebaek and Lee, Byounyoung and Kim, Seongmin and Shih, Ming-Wei and Shin, Insik and Han, Dongsu and Kim, Taesoo},
	year = {2017},
	file = {ndss17-sgxshield.pdf:/home/colin/.zotero/zotero/f4prs9xk.default/zotero/storage/BEDHPJAW/ndss17-sgxshield.pdf:application/pdf}
}

@article{moghimi_cachezoom:_2017,
	title = {{CacheZoom}: {How} {SGX} {Amplifies} {The} {Power} of {Cache} {Attacks}},
	shorttitle = {{CacheZoom}},
	url = {http://arxiv.org/abs/1703.06986},
	abstract = {Intel SGX is a hardware extension proposed to provide a Trusted Execution Environment on commodity processors. SGX disregards microarchitectural side-channels as out of scope of its threat model. In this paper, we propose a high-resolution cache side-channel attack and demonstrate its impact and its capability in overcoming the security goals of SGX technology. Our tool tracks virtually all memory accesses of SGX enclaves with high spatial and temporal precision. The resulting attack succeeds on implementations that were previously believed to be resistant to realistic cache attacks. We demonstrate that these new attacks can recover AES keys from an enclave with as few as ten measurements.},
	journal = {arXiv:1703.06986 [cs]},
	author = {Moghimi, Ahmad and Irazoqui, Gorka and Eisenbarth, Thomas},
	month = mar,
	year = {2017},
	note = {arXiv: 1703.06986},
	keywords = {Computer Science - Cryptography and Security},
	file = {arXiv\:1703.06986 PDF:/home/colin/.zotero/zotero/f4prs9xk.default/zotero/storage/26ND78KZ/Moghimi et al. - 2017 - CacheZoom How SGX Amplifies The Power of Cache At.pdf:application/pdf;arXiv.org Snapshot:/home/colin/.zotero/zotero/f4prs9xk.default/zotero/storage/Q9PB2QM6/1703.html:text/html}
}

@inproceedings{carlucci_http_2015,
	title = {{HTTP} over {UDP}: an experimental investigation of {QUIC}},
	isbn = {978-1-4503-3196-8},
	shorttitle = {{HTTP} over {UDP}},
	url = {http://dl.acm.org/citation.cfm?doid=2695664.2695706},
	doi = {10.1145/2695664.2695706},
	language = {en},
	urldate = {2017-06-09},
	publisher = {ACM Press},
	author = {Carlucci, Gaetano and De Cicco, Luca and Mascolo, Saverio},
	year = {2015},
	pages = {609--614},
	file = {p609-carlucci.pdf:/home/colin/.zotero/zotero/f4prs9xk.default/zotero/storage/NHBUTT6W/p609-carlucci.pdf:application/pdf}
}

@article{costan_intel_2016,
	title = {Intel {SGX} {Explained}.},
	volume = {2016},
	url = {https://pdfs.semanticscholar.org/2d7f/3f4ca3fbb15ae04533456e5031e0d0dc845a.pdf},
	urldate = {2017-05-30},
	journal = {IACR Cryptology ePrint Archive},
	author = {Costan, Victor and Devadas, Srinivas},
	year = {2016},
	pages = {86},
	file = {3f4ca3fbb15ae04533456e5031e0d0dc845a.pdf:/home/colin/.zotero/zotero/f4prs9xk.default/zotero/storage/X8UG4GEP/3f4ca3fbb15ae04533456e5031e0d0dc845a.pdf:application/pdf}
}

@inproceedings{handigol_reproducible_2012,
	address = {New York, NY, USA},
	series = {{CoNEXT} '12},
	title = {Reproducible {Network} {Experiments} {Using} {Container}-based {Emulation}},
	isbn = {978-1-4503-1775-7},
	url = {http://doi.acm.org/10.1145/2413176.2413206},
	doi = {10.1145/2413176.2413206},
	abstract = {In an ideal world, all research papers would be runnable: simply click to replicate all results, using the same setup as the authors. One approach to enable runnable network systems papers is Container-Based Emulation (CBE), where an environment of virtual hosts, switches, and links runs on a modern multicore server, using real application and kernel code with software-emulated network elements. CBE combines many of the best features of software simulators and hardware testbeds, but its performance fidelity is unproven. In this paper, we put CBE to the test, using our prototype, Mininet-HiFi, to reproduce key results from published network experiments such as DCTCP, Hedera, and router buffer sizing. We report lessons learned from a graduate networking class at Stanford, where 37 students used our platform to replicate 18 published results of their own choosing. Our experiences suggest that CBE makes research results easier to reproduce and build upon.},
	booktitle = {Proceedings of the 8th {International} {Conference} on {Emerging} {Networking} {Experiments} and {Technologies}},
	publisher = {ACM},
	author = {Handigol, Nikhil and Heller, Brandon and Jeyakumar, Vimalkumar and Lantz, Bob and McKeown, Nick},
	year = {2012},
	keywords = {container-based emulation, reproducible research},
	pages = {253--264},
	file = {ACM Full Text PDF:/home/colin/.zotero/zotero/f4prs9xk.default/zotero/storage/9FD6VCTW/Handigol et al. - 2012 - Reproducible Network Experiments Using Container-b.pdf:application/pdf}
}

@misc{intel_corporation_intel_2016,
	title = {Intel {Software} {Guard} {Extensions}},
	url = {https://software.intel.com/en-us/sgx},
	urldate = {2017-06-14},
	journal = {Intel Software Guard Extensions},
	author = {Intel Corporation},
	year = {2016},
	file = {Intel SGX Homepage | IntelÂ® Software:/home/colin/.zotero/zotero/f4prs9xk.default/zotero/storage/DGQ8TTAS/sgx.html:text/html}
}

@inproceedings{gotzfried_cache_2017,
	title = {Cache {Attacks} on {Intel} {SGX}},
	isbn = {978-1-4503-4935-2},
	url = {http://dl.acm.org/citation.cfm?doid=3065913.3065915},
	doi = {10.1145/3065913.3065915},
	language = {en},
	urldate = {2017-05-30},
	publisher = {ACM Press},
	author = {GÃ¶tzfried, Johannes and Eckert, Moritz and Schinzel, Sebastian and MÃ¼ller, Tilo},
	year = {2017},
	pages = {1--6},
	file = {sgx-timing.pdf:/home/colin/.zotero/zotero/f4prs9xk.default/zotero/storage/HBMW57WK/sgx-timing.pdf:application/pdf}
}

@article{cardwell_bbr:_2016,
	title = {{BBR}: {Congestion}-{Based} {Congestion} {Control}},
	volume = {14},
	issn = {1542-7730},
	shorttitle = {{BBR}},
	url = {http://doi.acm.org/10.1145/3012426.3022184},
	doi = {10.1145/3012426.3022184},
	abstract = {Measuring bottleneck bandwidth and round-trip propagation time},
	number = {5},
	journal = {Queue},
	author = {Cardwell, Neal and Cheng, Yuchung and Gunn, C. Stephen and Yeganeh, Soheil Hassas and Jacobson, Van},
	month = oct,
	year = {2016},
	pages = {50:20--50:53},
	file = {ACM Full Text PDF:/home/colin/.zotero/zotero/f4prs9xk.default/zotero/storage/9S4K5MFZ/Cardwell et al. - 2016 - BBR Congestion-Based Congestion Control.pdf:application/pdf}
}

@article{wu_ictcp:_2013,
	title = {{ICTCP}: {Incast} {Congestion} {Control} for {TCP} in {Data}-{Center} {Networks}},
	volume = {21},
	issn = {1063-6692},
	shorttitle = {{ICTCP}},
	doi = {10.1109/TNET.2012.2197411},
	abstract = {Transport Control Protocol (TCP) incast congestion happens in high-bandwidth and low-latency networks when multiple synchronized servers send data to the same receiver in parallel. For many important data-center applications such as MapReduce and Search, this many-to-one traffic pattern is common. Hence TCP incast congestion may severely degrade their performances, e.g., by increasing response time. In this paper, we study TCP incast in detail by focusing on the relationships between TCP throughput, round-trip time (RTT), and receive window. Unlike previous approaches, which mitigate the impact of TCP incast congestion by using a fine-grained timeout value, our idea is to design an Incast congestion Control for TCP (ICTCP) scheme on the receiver side. In particular, our method adjusts the TCP receive window proactively before packet loss occurs. The implementation and experiments in our testbed demonstrate that we achieve almost zero timeouts and high goodput for TCP incast.},
	number = {2},
	journal = {IEEE/ACM Transactions on Networking},
	author = {Wu, H. and Feng, Z. and Guo, C. and Zhang, Y.},
	month = apr,
	year = {2013},
	keywords = {Algorithm design and analysis, almost zero timeouts, and Search, Bandwidth, computer centres, data-center networks, de facto reliable transport-layer protocol, Delay, fine-grained timeout value, high-bandwidth networks, high goodput, ICTCP, incast congestion, increase response time, Internet, low-latency networks, many-to-one traffic pattern, MapReduce, multiple synchronized servers, packet loss, Receivers, receive window, round-trip time, RTT, Servers, Switches, TCP, TCP throughput, telecommunication congestion control, telecommunication network reliability, Telecommunication traffic, Throughput, transport control protocol incast congestion control, transport protocols},
	pages = {345--358},
	file = {IEEE Xplore Abstract Record:/home/colin/.zotero/zotero/f4prs9xk.default/zotero/storage/IRX7SUQ5/6203387.html:text/html;IEEE Xplore Full Text PDF:/home/colin/.zotero/zotero/f4prs9xk.default/zotero/storage/6VGRPZRJ/Wu et al. - 2013 - ICTCP Incast Congestion Control for TCP in Data-C.pdf:application/pdf}
}

@inproceedings{shih_t-sgx:_2017,
	title = {T-{SGX}: {Eradicating} {Controlled}-{Channel} {Attacks} {Against} {Enclave} {Programs}},
	isbn = {978-1-891562-46-4},
	shorttitle = {T-{SGX}},
	url = {https://www.internetsociety.org/sites/default/files/ndss2017_07-2_Shih_paper.pdf},
	doi = {10.14722/ndss.2017.23193},
	language = {en},
	urldate = {2017-05-30},
	publisher = {Internet Society},
	author = {Shih, Ming-Wei and Lee, Sangho and Kim, Taesoo and Peinado, Marcus},
	year = {2017},
	file = {fba7aad263c7d4cf5ce67b1d629935043e7a.pdf:/home/colin/.zotero/zotero/f4prs9xk.default/zotero/storage/FXRCM9M8/fba7aad263c7d4cf5ce67b1d629935043e7a.pdf:application/pdf}
}

@inproceedings{alizadeh_data_2010,
	title = {Data center tcp (dctcp)},
	volume = {40},
	url = {http://dl.acm.org/citation.cfm?id=1851192},
	urldate = {2017-06-08},
	booktitle = {{ACM} {SIGCOMM} computer communication review},
	publisher = {ACM},
	author = {Alizadeh, Mohammad and Greenberg, Albert and Maltz, David A. and Padhye, Jitendra and Patel, Parveen and Prabhakar, Balaji and Sengupta, Sudipta and Sridharan, Murari},
	year = {2010},
	pages = {63--74},
	file = {p63-alizadeh.pdf:/home/colin/.zotero/zotero/f4prs9xk.default/zotero/storage/DA46PEAZ/p63-alizadeh.pdf:application/pdf}
}

@article{schwarz_malware_2017,
	title = {Malware {Guard} {Extension}: {Using} {SGX} to {Conceal} {Cache} {Attacks}},
	shorttitle = {Malware {Guard} {Extension}},
	url = {http://arxiv.org/abs/1702.08719},
	abstract = {In modern computer systems, user processes are isolated from each other by the operating system and the hardware. Additionally, in a cloud scenario it is crucial that the hypervisor isolates tenants from other tenants that are co-located on the same physical machine. However, the hypervisor does not protect tenants against the cloud provider and thus the supplied operating system and hardware. Intel SGX provides a mechanism that addresses this scenario. It aims at protecting user-level software from attacks from other processes, the operating system, and even physical attackers. In this paper, we demonstrate fine-grained software-based side-channel attacks from a malicious SGX enclave targeting co-located enclaves. Our attack is the first malware running on real SGX hardware, abusing SGX protection features to conceal itself. Furthermore, we demonstrate our attack both in a native environment and across multiple Docker containers. We perform a Prime+Probe cache side-channel attack on a co-located SGX enclave running an up-to-date RSA implementation that uses a constant-time multiplication primitive. The attack works although in SGX enclaves there are no timers, no large pages, no physical addresses, and no shared memory. In a semi-synchronous attack, we extract 96\% of an RSA private key from a single trace. We extract the full RSA private key in an automated attack from 11 traces within 5 minutes.},
	journal = {arXiv:1702.08719 [cs]},
	author = {Schwarz, Michael and Weiser, Samuel and Gruss, Daniel and Maurice, ClÃ©mentine and Mangard, Stefan},
	month = feb,
	year = {2017},
	note = {arXiv: 1702.08719},
	keywords = {Computer Science - Cryptography and Security},
	file = {arXiv\:1702.08719 PDF:/home/colin/.zotero/zotero/f4prs9xk.default/zotero/storage/Q6Q54JQZ/Schwarz et al. - 2017 - Malware Guard Extension Using SGX to Conceal Cach.pdf:application/pdf;arXiv.org Snapshot:/home/colin/.zotero/zotero/f4prs9xk.default/zotero/storage/UH7IJT3K/1702.html:text/html}
}

@inproceedings{jain_routing_2004,
	address = {New York, NY, USA},
	series = {{SIGCOMM} '04},
	title = {Routing in a {Delay} {Tolerant} {Network}},
	isbn = {978-1-58113-862-7},
	url = {http://doi.acm.org/10.1145/1015467.1015484},
	doi = {10.1145/1015467.1015484},
	abstract = {We formulate the delay-tolerant networking routing problem, where messages are to be moved end-to-end across a connectivity graph that is time-varying but whose dynamics may be known in advance. The problem has the added constraints of finite buffers at each node and the general property that no contemporaneous end-to-end path may ever exist. This situation limits the applicability of traditional routing approaches that tend to treat outages as failures and seek to find an existing end-to-end path. We propose a framework for evaluating routing algorithms in such environments. We then develop several algorithms and use simulations to compare their performance with respect to the amount of knowledge they require about network topology. We find that, as expected, the algorithms using the least knowledge tend to perform poorly. We also find that with limited additional knowledge, far less than complete global knowledge, efficient algorithms can be constructed for routing in such environments. To the best of our knowledge this is the first such investigation of routing issues in DTNs.},
	urldate = {2017-05-14},
	booktitle = {Proceedings of the 2004 {Conference} on {Applications}, {Technologies}, {Architectures}, and {Protocols} for {Computer} {Communications}},
	publisher = {ACM},
	author = {Jain, Sushant and Fall, Kevin and Patra, Rabin},
	year = {2004},
	keywords = {delay tolerant network, routing},
	pages = {145--158},
	file = {ACM Full Text PDF:/home/colin/.zotero/zotero/f4prs9xk.default/zotero/storage/U5D6BU3J/Jain et al. - 2004 - Routing in a Delay Tolerant Network.pdf:application/pdf}
}

@article{moon_cedos:_2017,
	title = {Cedos: {A} {Network} {Architecture} and {Programming} {Abstraction} for {Delay}-{Tolerant} {Mobile} {Apps}},
	volume = {25},
	issn = {1063-6692},
	shorttitle = {Cedos},
	doi = {10.1109/TNET.2016.2603523},
	abstract = {Delay-tolerant Wi-Fi offloading is known to improve overall mobile network bandwidth at low delay and low cost. Yet, in reality, we rarely find mobile apps that fully support opportunistic Wi-Fi access. This is mainly because it is still challenging to develop delay-tolerant mobile apps due to the complexity of handling network disruptions and delays. In this paper, we present Cedos, a practical delay-tolerant mobile network access architecture in which one can easily build a mobile app. Cedos consists of three components. First, it provides a familiar socket API whose semantics conforms to TCP, while the underlying protocol, D2TP, transparently handles network disruptions and delays in mobility. Second, Cedos allows the developers to explicitly exploit delays in mobile apps. App developers can express maximum user-specified delays in content download or use the API for real-time buffer management at opportunistic Wi-Fi usage. Third, for backward compatibility to existing TCP-based servers, Cedos provides D2Prox, a protocol-translation Web proxy. D2Prox allows intermittent connections on the mobile device side, but correctly translates Web transactions with traditional TCP servers. We demonstrate the practicality of Cedos by porting mobile Firefox and VLC video streaming client to using the API. We also implement delay/disruption-tolerant podcast client and run a field study with 50 people for eight weeks. We find that up to 92.4\% of the podcast traffic is offloaded to Wi-Fi, and one can watch a streaming video in a moving train while offloading 48\% of the content to Wi-Fi without a single pause.},
	number = {2},
	journal = {IEEE/ACM Transactions on Networking},
	author = {Moon, Y. and Kim, D. and Go, Y. and Kim, Y. and Yi, Y. and Chong, S. and Park, K.},
	month = apr,
	year = {2017},
	keywords = {application program interfaces, Cedos, D2Prox, D2TP protocol, Delays, delay-tolerant mobile apps, delay-tolerant mobile network access architecture, Delay-tolerant networking, delay tolerant networks, delay-tolerant podcast client, delay-tolerant Wi-Fi offloading, Digital audio broadcasting, disruption-tolerant podcast client, IEEE 802.11 Standard, Internet, maximum user-specified delays, Mobile communication, mobile computing, mobile Firefox, mobile network bandwidth, mobility, opportunistic Wi-Fi access, programming abstraction, protocol-translation Web proxy, real-time buffer management, socket API, Streaming media, Switches, TCP-based servers, transport protocols, video streaming, VLC video streaming client, Web transactions, Wi-Fi offloading, wireless LAN},
	pages = {646--661},
	file = {IEEE Xplore Abstract Record:/home/colin/.zotero/zotero/f4prs9xk.default/zotero/storage/ZE8A6ABN/7762223.html:text/html;IEEE Xplore Full Text PDF:/home/colin/.zotero/zotero/f4prs9xk.default/zotero/storage/5NHH3TJC/Moon et al. - 2017 - Cedos A Network Architecture and Programming Abst.pdf:application/pdf}
}

@article{kreutz_software-defined_2015,
	title = {Software-{Defined} {Networking}: {A} {Comprehensive} {Survey}},
	volume = {103},
	issn = {0018-9219},
	shorttitle = {Software-{Defined} {Networking}},
	doi = {10.1109/JPROC.2014.2371999},
	abstract = {The Internet has led to the creation of a digital society, where (almost) everything is connected and is accessible from anywhere. However, despite their widespread adoption, traditional IP networks are complex and very hard to manage. It is both difficult to configure the network according to predefined policies, and to reconfigure it to respond to faults, load, and changes. To make matters even more difficult, current networks are also vertically integrated: the control and data planes are bundled together. Software-defined networking (SDN) is an emerging paradigm that promises to change this state of affairs, by breaking vertical integration, separating the network's control logic from the underlying routers and switches, promoting (logical) centralization of network control, and introducing the ability to program the network. The separation of concerns, introduced between the definition of network policies, their implementation in switching hardware, and the forwarding of traffic, is key to the desired flexibility: by breaking the network control problem into tractable pieces, SDN makes it easier to create and introduce new abstractions in networking, simplifying network management and facilitating network evolution. In this paper, we present a comprehensive survey on SDN. We start by introducing the motivation for SDN, explain its main concepts and how it differs from traditional networking, its roots, and the standardization activities regarding this novel paradigm. Next, we present the key building blocks of an SDN infrastructure using a bottom-up, layered approach. We provide an in-depth analysis of the hardware infrastructure, southbound and northbound application programming interfaces (APIs), network virtualization layers, network operating systems (SDN controllers), network programming languages, and network applications. We also look at cross-layer problems such as debugging and troubleshooting. In an effort to anticipate the future evolution of this - ew paradigm, we discuss the main ongoing research efforts and challenges of SDN. In particular, we address the design of switches and control platforms - with a focus on aspects such as resiliency, scalability, performance, security, and dependability - as well as new opportunities for carrier transport networks and cloud providers. Last but not least, we analyze the position of SDN as a key enabler of a software-defined environment.},
	number = {1},
	journal = {Proceedings of the IEEE},
	author = {Kreutz, D. and Ramos, F. M. V. and VerÃ­ssimo, P. E. and Rothenberg, C. E. and Azodolmolky, S. and Uhlig, S.},
	month = jan,
	year = {2015},
	keywords = {API, application program interfaces, bottom-up-layered approach, Carrier-grade networks, carrier transport networks, cloud providers, Communication networks, computer network management, computer network reliability, Computer networks, computer network security, control planes, control platform design, Control systems, cross-layer problems, data planes, debugging, dependability, digital society, flow-based networking, hardware infrastructure, IP networks, logical network control centralization, network applications, network control logic separation, network control problem, network hypervisor, network management, network operating systems, network operating systems (NOSs), network policies, network program, network programming languages, network reconfiguration, network virtualization, network virtualization layers, northbound application programming interface, OpenFlow, performance analysis, programmable networks, programming languages, resiliency analysis, routers, scalability, scalability analysis, SDN controllers, SDN infrastructure, SDN position analysis, security analysis, software-defined environments, software defined networking, software-defined networking, software-defined networking (SDN), southbound application programming interface, standardization activities, switching hardware, switch platform design, telecommunication network routing, Telecommunication traffic, traffic forwarding, troubleshooting, vertically integrated networks, virtualization},
	pages = {14--76},
	file = {IEEE Xplore Abstract Record:/home/colin/.zotero/zotero/f4prs9xk.default/zotero/storage/TM6SWZCK/6994333.html:text/html;IEEE Xplore Full Text PDF:/home/colin/.zotero/zotero/f4prs9xk.default/zotero/storage/3NFRF25B/Kreutz et al. - 2015 - Software-Defined Networking A Comprehensive Surve.pdf:application/pdf}
}

@inproceedings{chen_detecting_2017,
	address = {New York, NY, USA},
	series = {{ASIA} {CCS} '17},
	title = {Detecting {Privileged} {Side}-{Channel} {Attacks} in {Shielded} {Execution} with {DÃ©JÃ } {Vu}},
	isbn = {978-1-4503-4944-4},
	url = {http://doi.acm.org/10.1145/3052973.3053007},
	doi = {10.1145/3052973.3053007},
	abstract = {Intel Software Guard Extension (SGX) protects the confidentiality and integrity of an unprivileged program running inside a secure enclave from a privileged attacker who has full control of the entire operating system (OS). Program execution inside this enclave is therefore referred to as shielded. Unfortunately, shielded execution does not protect programs from side-channel attacks by a privileged attacker. For instance, it has been shown that by changing page table entries of memory pages used by shielded execution, a malicious OS kernel could observe memory page accesses from the execution and hence infer a wide range of sensitive information about it. In fact, this page-fault side channel is only an instance of a category of side-channel attacks, here called privileged side-channel attacks, in which privileged attackers frequently preempt the shielded execution to obtain fine-grained side-channel observations. In this paper, we present Deja Vu, a software framework that enables a shielded execution to detect such privileged side-channel attacks. Specifically, we build into shielded execution the ability to check program execution time at the granularity of paths in its control-flow graph. To provide a trustworthy source of time measurement, Deja Vu implements a novel software reference clock that is protected by Intel Transactional Synchronization Extensions (TSX), a hardware implementation of transactional memory. Evaluations show that Deja Vu effectively detects side-channel attacks against shielded execution and against the reference clock itself.},
	booktitle = {Proceedings of the 2017 {ACM} on {Asia} {Conference} on {Computer} and {Communications} {Security}},
	publisher = {ACM},
	author = {Chen, Sanchuan and Zhang, Xiaokuan and Reiter, Michael K. and Zhang, Yinqian},
	year = {2017},
	keywords = {side-channel detection, software guard extension, transactional synchronization extensions},
	pages = {7--18},
	file = {ACM Full Text PDF:/home/colin/.zotero/zotero/f4prs9xk.default/zotero/storage/GNK7JRKX/Chen et al. - 2017 - Detecting Privileged Side-Channel Attacks in Shiel.pdf:application/pdf}
}

@inproceedings{wischik_design_2011,
	title = {Design, {Implementation} and {Evaluation} of {Congestion} {Control} for {Multipath} {TCP}.},
	volume = {11},
	url = {https://www.usenix.org/legacy/event/nsdi11/tech/full_papers/Wischik.pdf},
	urldate = {2017-06-13},
	booktitle = {{NSDI}},
	author = {Wischik, Damon and Raiciu, Costin and Greenhalgh, Adam and Handley, Mark},
	year = {2011},
	pages = {8--8},
	file = {Wischik.pdf:/home/colin/.zotero/zotero/f4prs9xk.default/zotero/storage/Q7IQZSUC/Wischik.pdf:application/pdf}
}

@misc{noauthor_why_2015,
	title = {Why itâ€™s harder to forge a {SHA}-1 certificate than it is to find a {SHA}-1 collision},
	url = {http://blog.cloudflare.com/why-its-harder-to-forge-a-sha-1-certificate-than-it-is-to-find-a-sha-1-collision/},
	abstract = {Itâ€™s well known that SHA-1 is no longer considered a secure cryptographic hash function. Researchers now believe that finding a hash collision (two values that result in the same value when SHA-1 is applied) is inevitable and likely to happen in a matter of months. This poses a potential},
	urldate = {2017-06-25},
	journal = {Cloudflare Blog},
	month = dec,
	year = {2015},
	file = {Snapshot:/home/colin/.zotero/zotero/f4prs9xk.default/zotero/storage/TP354VDX/why-its-harder-to-forge-a-sha-1-certificate-than-it-is-to-find-a-sha-1-collision.html:text/html}
}

@misc{intel_corporation_tutorial_2015,
	title = {Tutorial {Slides} for {Intel} {SGX}},
	url = {https://software.intel.com/sites/default/files/332680-002.pdf},
	urldate = {2017-07-15},
	author = {Intel Corporation},
	year = {2015},
	file = {332680-002.pdf:/home/colin/.zotero/zotero/f4prs9xk.default/zotero/storage/PR9QFRZ8/332680-002.pdf:application/pdf}
}

@inproceedings{xu_controlled-channel_2015,
	title = {Controlled-{Channel} {Attacks}: {Deterministic} {Side} {Channels} for {Untrusted} {Operating} {Systems}},
	shorttitle = {Controlled-{Channel} {Attacks}},
	doi = {10.1109/SP.2015.45},
	abstract = {The presence of large numbers of security vulnerabilities in popular feature-rich commodity operating systems has inspired a long line of work on excluding these operating systems from the trusted computing base of applications, while retaining many of their benefits. Legacy applications continue to run on the untrusted operating system, while a small hyper visor or trusted hardware prevents the operating system from accessing the applications' memory. In this paper, we introduce controlled-channel attacks, a new type of side-channel attack that allows an untrusted operating system to extract large amounts of sensitive information from protected applications on systems like Overshadow, Ink Tag or Haven. We implement the attacks on Haven and Ink Tag and demonstrate their power by extracting complete text documents and outlines of JPEG images from widely deployed application libraries. Given these attacks, it is unclear if Over shadow's vision of protecting unmodified legacy applications from legacy operating systems running on off-the-shelf hardware is still tenable.},
	booktitle = {2015 {IEEE} {Symposium} on {Security} and {Privacy}},
	author = {Xu, Y. and Cui, W. and Peinado, M.},
	month = may,
	year = {2015},
	keywords = {controlled-channel attacks, Control systems, cryptography, Data mining, deterministic side channels, document handling, feature-rich commodity operating systems, Hardware, Haven, hypervisor, Ink Tag, JPEG images, legacy operating systems, Monitoring, Operating systems, operating systems (computers), Overshadow, Resource management, security vulnerabilities, SGX, side-channel attack, text documents, trusted computing, trusted hardware, untrusted operating system, untrusted operating systems, virtualization, Virtual machine monitors},
	pages = {640--656},
	file = {IEEE Xplore Abstract Record:/home/colin/.zotero/zotero/f4prs9xk.default/zotero/storage/AHXKFX9G/7163052.html:text/html;IEEE Xplore Full Text PDF:/home/colin/.zotero/zotero/f4prs9xk.default/zotero/storage/SAFPGUHD/Xu et al. - 2015 - Controlled-Channel Attacks Deterministic Side Cha.pdf:application/pdf}
}

@inproceedings{alizadeh_analysis_2011,
	title = {Analysis of {DCTCP}: stability, convergence, and fairness},
	shorttitle = {Analysis of {DCTCP}},
	url = {http://dl.acm.org/citation.cfm?id=1993753},
	urldate = {2017-06-10},
	booktitle = {Proceedings of the {ACM} {SIGMETRICS} joint international conference on {Measurement} and modeling of computer systems},
	publisher = {ACM},
	author = {Alizadeh, Mohammad and Javanmard, Adel and Prabhakar, Balaji},
	year = {2011},
	pages = {73--84},
	file = {0d41b1f05cee1d82b213bfacf044983974b1.pdf:/home/colin/.zotero/zotero/f4prs9xk.default/zotero/storage/PKNTVVPX/0d41b1f05cee1d82b213bfacf044983974b1.pdf:application/pdf}
}

@inproceedings{anati_innovative_2013,
	title = {Innovative technology for {CPU} based attestation and sealing},
	volume = {13},
	url = {https://software.intel.com/en-us/articles/innovative-technology-for-cpu-based-attestation-and-sealing},
	urldate = {2017-06-14},
	booktitle = {Proceedings of the 2nd international workshop on hardware and architectural support for security and privacy},
	author = {Anati, Ittai and Gueron, Shay and Johnson, Simon and Scarlata, Vincent},
	year = {2013},
	file = {hasp-2013-innovative-technology-for-attestation-and-sealing.pdf:/home/colin/.zotero/zotero/f4prs9xk.default/zotero/storage/4KUKQ966/hasp-2013-innovative-technology-for-attestation-and-sealing.pdf:application/pdf}
}

@misc{noauthor_passwords:_nodate,
	title = {Passwords: {Attacks} and {Threats}},
	shorttitle = {Passwords},
	url = {http://bugcharmer.blogspot.com/2012/06/passwords-attacks-and-threats.html},
	abstract = {People throw around a lot of advice about password security, but we don't often talk about what we're trying to accomplish.Â  The purpose of ...},
	urldate = {2017-06-25},
	file = {Snapshot:/home/colin/.zotero/zotero/f4prs9xk.default/zotero/storage/248B86VI/passwords-attacks-and-threats.html:text/html}
}

@article{shinde_preventing_2015,
	title = {Preventing {Your} {Faults} {From} {Telling} {Your} {Secrets}: {Defenses} {Against} {Pigeonhole} {Attacks}},
	shorttitle = {Preventing {Your} {Faults} {From} {Telling} {Your} {Secrets}},
	url = {http://arxiv.org/abs/1506.04832},
	abstract = {New hardware primitives such as Intel SGX secure a user-level process in presence of an untrusted or compromised OS. Such "enclaved execution" systems are vulnerable to several side-channels, one of which is the page fault channel. In this paper, we show that the page fault side-channel has sufficient channel capacity to extract bits of encryption keys from commodity implementations of cryptographic routines in OpenSSL and Libgcrypt --- leaking 27\% on average and up to 100\% of the secret bits in many case-studies. To mitigate this, we propose a software-only defense that masks page fault patterns by determinising the program's memory access behavior. We show that such a technique can be built into a compiler, and implement it for a subset of C which is sufficient to handle the cryptographic routines we study. This defense when implemented generically can have significant overhead of up to 4000X, but with help of developer-assisted compiler optimizations, the overhead reduces to at most 29.22\% in our case studies. Finally, we discuss scope for hardware-assisted defenses, and show one solution that can reduce overheads to 6.77\% with support from hardware changes.},
	journal = {arXiv:1506.04832 [cs]},
	author = {Shinde, Shweta and Chua, Zheng Leong and Narayanan, Viswesh and Saxena, Prateek},
	month = jun,
	year = {2015},
	note = {arXiv: 1506.04832},
	keywords = {Computer Science - Cryptography and Security},
	file = {arXiv\:1506.04832 PDF:/home/colin/.zotero/zotero/f4prs9xk.default/zotero/storage/IGQHEVRB/Shinde et al. - 2015 - Preventing Your Faults From Telling Your Secrets .pdf:application/pdf;arXiv.org Snapshot:/home/colin/.zotero/zotero/f4prs9xk.default/zotero/storage/SUTN786J/1506.html:text/html}
}

@article{schoeneich_socialrouting:_2016,
	title = {{SocialRouting}: {The} social-based routing algorithm for {Delay} {Tolerant} {Networks}},
	volume = {62},
	issn = {2300-1933},
	shorttitle = {{SocialRouting}},
	url = {https://www.degruyter.com/view/j/eletel.2016.62.issue-2/eletel-2016-0023/eletel-2016-0023.xml},
	doi = {10.1515/eletel-2016-0023},
	abstract = {Delay and Disruptive Tolerant Networks (DTN) are relatively a new networking concept that could provide a robust communication in wide range of implementations from the space to battlefield or other military usage. However in such dynamic networks, which could be considered as a set of intermittently connected nodes, message forwarding strategy is a key issue. Existing routing solutions concentrate mainly on two major routing families flooding and knowledge based algorithms. This paper presents SocialRouting - the social-based routing algorithm designed for DTN. The use of the social properties of wireless mobile nodes is the novel way of message routing that is based on message ferrying between separated parts of the network. Proposed idea has been extensively tested using simulation tools. The simulations were made based on especially designed for measurements in DTN scenarios and compared with popular solutions.},
	number = {2},
	urldate = {2017-05-14},
	journal = {International Journal of Electronics and Telecommunications},
	author = {Schoeneich, RadosÅ‚aw O. and Surgiewicz, RafaÅ‚},
	year = {2016},
	pages = {167--172},
	file = {Full Text PDF:/home/colin/.zotero/zotero/f4prs9xk.default/zotero/storage/VVBUJBVX/Schoeneich and Surgiewicz - 2016 - SocialRouting The social-based routing algorithm .pdf:application/pdf}
}

@article{morris_password_1979,
	title = {Password {Security}: {A} {Case} {History}},
	volume = {22},
	issn = {0001-0782},
	shorttitle = {Password {Security}},
	url = {http://doi.acm.org/10.1145/359168.359172},
	doi = {10.1145/359168.359172},
	abstract = {This paper describes the history of the design of the password security scheme on a remotely accessed time-sharing system. The present design was the result of countering observed attempts to penetrate the system. The result is a compromise between extreme security and ease of use.},
	number = {11},
	journal = {Commun. ACM},
	author = {Morris, Robert and Thompson, Ken},
	month = nov,
	year = {1979},
	keywords = {computer security, Operating systems, passwords},
	pages = {594--597},
	file = {ACM Full Text PDF:/home/colin/.zotero/zotero/f4prs9xk.default/zotero/storage/3FZMWMVJ/Morris and Thompson - 1979 - Password Security A Case History.pdf:application/pdf}
}

@inproceedings{lian_shortest_2009,
	title = {Shortest path routing with reliability requirement in delay tolerant networks},
	doi = {10.1109/ICFIN.2009.5339556},
	abstract = {The topology of a delay tolerant network (DTN) over time has been modeled by a space-time graph. However, the mobility of nodes, such as buses, may not be completely predictable due to factors such as traffic load, road condition, the number of passengers getting on and off the buses, and the operations of traffic lights. In this paper, we adapt the space-time graph by augmenting each horizontal edge with a direct contact probability to model the uncertainty of connectivity. With such an augmented space-time graph, our goal is to compute a shortest routing path satisfying a given end-to-end delivery reliability in a DTN. To facilitate such computation, we adapt the Floyd-Warshall algorithm to compute the maximum contact probability matrix at each time interval. By using an iterative matrix multiplication scheme on a maximum contact matrix, we can compute the shortest path satisfying the reliability constraint. Simulation results validate the performance of our solution which achieves a good balance between delay and reliability.},
	booktitle = {2009 {First} {International} {Conference} on {Future} {Information} {Networks}},
	author = {Lian, Huai-En and Chen, C. and Chang, J. W. and Shen, C. C. and Jan, R. H.},
	month = oct,
	year = {2009},
	keywords = {ad hoc networks, Computational modeling, Delay effects, delay tolerant network, delay tolerant networks, Disruption tolerant networking, Floyd-Warshall algorithm, Iterative algorithms, iterative matrix multiplication, iterative methods, matrix algebra, maximum contact probability matrix, mobile computing, network topology, node mobility, reliability requirement, reliable routing, road condition, Roads, routing, shortest path routing, space-time graph, telecommunication network routing, telecommunication network topology, Telecommunication traffic, Traffic control, traffic load, Uncertainty},
	pages = {292--297},
	file = {IEEE Xplore Abstract Record:/home/colin/.zotero/zotero/f4prs9xk.default/zotero/storage/5F9E47D8/5339556.html:text/html;IEEE Xplore Full Text PDF:/home/colin/.zotero/zotero/f4prs9xk.default/zotero/storage/B72F72VG/Lian et al. - 2009 - Shortest path routing with reliability requirement.pdf:application/pdf}
}

@misc{miessler_seclists_2017-1,
	title = {{SecLists} is the security tester\&\#39;s companion. {It} is a collection of multiple types of lists used during security assessments. {List} types include usernames, passwords, {URLs}, sensitive data grep s..},
	url = {https://github.com/danielmiessler/SecLists},
	author = {Miessler, Daniel},
	month = jun,
	year = {2017},
	note = {original-date: 2012-02-19T01:30:18Z},
	file = {Snapshot:/home/colin/.zotero/zotero/f4prs9xk.default/zotero/storage/S2JNVC84/SecLists.html:text/html}
}